name: Build

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: install packages
        run: npm install

      - name: eslint
        run: npm run lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install packages
        run: npm install

      - name: build
        run: npm run build

      - name: Setup SSH
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 188.63.57.139 >> ~/.ssh/known_hosts

      - name: Upload build to home server
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          rsync -avz -e "ssh -i ~/.ssh/id_ed25519" .next/ user@188.63.57.139:~/github-artifacts/file-transfer-${{ github.sha }}/

      - name: upload artifact
        if: github.ref != 'refs/heads/main' && github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/.next
          name: file-transfer-${{ github.sha }}
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 5

  docker:
    needs: [build, lint]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      actions: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: download artifact
        if: github.ref != 'refs/heads/main' && github.event_name != 'release'
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/.next
          name: file-transfer-${{ github.sha }}

      - name: download artifact from server
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 188.63.57.139 >> ~/.ssh/known_hosts
          rsync -avz -e "ssh -i ~/.ssh/id_ed25519" user@188.63.57.139:~/github-artifacts/file-transfer-${{ github.sha }}/ .next/

      - name: remove cache
        run: rm -rf .next/cache

      - name: login to docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: create image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=dev,enable=${{ github.ref_name == 'main' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=${{ github.ref_name }},enable=${{ github.event_name == 'release' }}

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: ${{ github.ref_name == 'main' || github.event_name == 'release'  }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: cleanup older images
        uses: actions/delete-package-versions@v5
        with:
          package-name: file-transfer
          package-type: container
          min-versions-to-keep: 10
          delete-only-pre-release-versions: "true"

      - name: Cleanup old artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          THRESHOLD_DATE=$(date -d '7 days ago' --utc +%Y-%m-%dT%H:%M:%SZ)

          gh api repos/${{ github.repository }}/actions/artifacts --paginate | \
            jq -r --arg THRESHOLD "$THRESHOLD_DATE" '.artifacts[] | select(.created_at < $THRESHOLD) | .id' | \
            while read id; do
              echo "Deleting artifact ID: $id"
              gh api --method DELETE repos/${{ github.repository }}/actions/artifacts/$id
            done
